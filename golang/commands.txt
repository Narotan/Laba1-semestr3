
-------------------------Односвязный Список-----------------------------------
    Команда	                                        Действие
FPUSH <name> <value>                    Добавить в конец
FADDHEAD <name> <value>	                Добавить в начало
FADDAFTER <name> <existing> <value>	    Добавить после элемента existing
FADDBEFORE <name> <existing> <value>    Добавить перед элементом existing
FDELHEAD <name>                     	Удалить голову
FDELTAIL <name>	                        Удалить хвост
FDEL <name> <value>	                    Удалить по значению
FDELAFTER <name> <value>	            Удалить элемент после value
FDELBFORE <name> <value>	            Удалить элемент перед value
FGET <name> <index>	                    Получить элемент по индексу
FGETALL <name>	                        Вывести весь список
FEXISTS <name> <value>	                Проверка наличия элемента

-------------------------Двухсвязанный Список-----------------------------------
    Команда	                                       Действие
LPUSH <name> <value>	                Добавить элемент в конец списка
LUNSHIFT <name> <value>	                Добавить элемент в начало списка
LAFTER <name> <existing> <value>	    Добавить элемент после существующего элемента <existing>
LBEFORE <name> <existing> <value>	    Добавить элемент перед существующим элементом <existing>
LDELHEAD <name>	                        Удалить голову списка
LDELTAIL <name>	                        Удалить хвост списка
LDEL <name> <value>	                    Удалить элемент по значению
LGET <name>	                            Вывести весь список
LEXISTS <name> <value>	                Проверить наличие элемента в списке, возвращает TRUE или FALSE

-------------------------Дерево avl-----------------------------------
    Команда	                                     Действие
TINSERT <name> <value>	                Добавить ключ <value> в дерево <name>
TDEL <name> <value>                     Удалить ключ <value> из дерева <name>
TGET <name> <value>	                    Проверить наличие ключа <value> в дереве <name> (возвращает TRUE/FALSE)
TPRINT <name>	                        Вывести все ключи дерева <name> в порядке возрастания (in-order)

-------------------------Стек-----------------------------------
    Команда	                                    Действие
SPUSH <name> <value>	                Добавить элемент <value> в стек <name> (в конец)
SPOP <name>	                            Удалить и вернуть верхний элемент стека <name>; если стек пустой — NULL
SGET <name> <index> (по желанию)	    Получить элемент по индексу <index> (0 — нижний, len-1 — верхний)
SPRINT <name> (по желанию)	В           Вывести все элементы стека <name> в порядке от нижнего к верхнему

-------------------------Очередь-----------------------------------
    Команда	                                    Действие
QPUSH <name> <value>	                Добавить элемент <value> в очередь <name> (в конец)
QPOP <name>                            	Удалить и вернуть первый элемент очереди <name>; если очередь пуста — NULL
QGET <name> <index> (по желанию)	    Получить элемент по индексу <index> (0 — голова, len-1 — хвост)
QPRINT <name> (по желанию)	            Вывести все элементы очереди <name> от головы до хвоста

-------------------------Массив-----------------------------------
    Команда	                                    Действие                
MPUSH <name> <value>	                Добавить элемент <value> в конец массива <name>
MDEL <name> <value>                 	Удалить первый элемент с значением <value> из массива <name>; если не найден — NOTFOUND
MGET <name> <index>                 	Получить элемент массива <name> по индексу <index>; если индекс некорректен — NULL
MGET <name>	                            Вывести весь массив <name>






